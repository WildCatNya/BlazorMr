@page "/timecode/delete/{TimeCodeId:int}"

@using Microsoft.EntityFrameworkCore

@inject IUnitOfWork Unit
@inject NavigationManager NavigationManager

@if (TimeCode is null)
{
    <p><em>Загрузка или нет такого таймкода</em></p>
}
else
{
    <h3>Удалить?</h3>

    <EditForm Model="@TimeCode" OnValidSubmit="Delete">
        <p>Id Video: <strong>@TimeCode.IdVideo</strong></p>
        <p>Start: <strong>@TimeCode.Start</strong></p>
        <p>End: <strong>@TimeCode.End</strong></p>

        <button type="submit" class="btn btn-danger">Удалить</button>
        <a href="/timecode" class="btn btn-secondary">Назад</a>
    </EditForm>
}

@code {
    [Parameter] public int TimeCodeId { get; set; }

    private TimeCode? TimeCode = new();

    protected override async Task OnInitializedAsync()
    {
        TimeCode = await Unit.TimeCodeRepository.GetByIdAsync(TimeCodeId);
    }

    private async Task Delete()
    {
        Unit.TimeCodeRepository.Remove(TimeCode);
        await Unit.SaveChangesAsync();
        NavigationManager.NavigateTo("timecode");
    }
}