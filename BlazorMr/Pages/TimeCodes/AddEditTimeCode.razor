@page "/timecode/add"
@page "/timecode/edit/{TimeCodeId:int}"
@page "/timecode/add/{VideoId:int}"

@using Microsoft.EntityFrameworkCore

@inject NavigationManager NavigationManager

<EditForm Model="@TimeCode" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Id Video: </label>
        <div>
            <InputSelect @bind-Value="@TimeCode.IdVideo">
                <option value="0">---</option>
                @foreach (var video in Videos)
                {
                    <option value="@video.Id">@video.Id</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => TimeCode.IdVideo)" />
        </div>
    </div>
    <div class="form-group mt-3">
        <label>Start: </label>
        <div>
            <InputNumber @bind-Value="@TimeCode.Start" />
            <ValidationMessage For="@(() => TimeCode.Start)" />
        </div>
    </div>
    <div class="form-group mt-3">
        <label>Start: </label>
        <div>
            <InputNumber @bind-Value="@TimeCode.End" />
            <ValidationMessage For="@(() => TimeCode.End)" />
        </div>
    </div>
    <div class="form-group mt-3">
        <button class="btn btn-primary" type="submit">
            @ButtonText
        </button>
        <a href="/timecode" class="btn btn-secondary">Назад</a>
    </div>
</EditForm>

@code {
    [Parameter] public int TimeCodeId { get; set; }

    [Parameter] public int VideoId { get; set; }

    private MediaContext _context = new();

    private TimeCode TimeCode = new();

    private List<Video> Videos;

    protected override async Task OnInitializedAsync()
    {
        if (TimeCodeId != 0)
        {
            TimeCode = _context.TimeCodes.ToList().FirstOrDefault(x => x.Id == TimeCodeId);
            ButtonText = "Edit";
        }
        if (VideoId != 0)
        {
            TimeCode.IdVideo = VideoId;
        }
        Videos = _context.Videos.ToList();
    }
  
    private string ButtonText = "Create";

    private async Task Save()
    {
        if (TimeCodeId == 0)
        {
            _context.TimeCodes.Add(TimeCode);
        }
        else
        {
            _context.Entry(TimeCode).State = EntityState.Modified;
        }
        await _context.SaveChangesAsync();
        NavigationManager.NavigateTo("timecode");
    }
}