@page "/author/delete/{AuthorId:int}"

@using Microsoft.EntityFrameworkCore

@inject IUnitOfWork Unit
@inject NavigationManager NavigationManager

@if (Author is not null)
{
    <h3>Удалить?</h3>

    <EditForm Model="@Author" OnValidSubmit="Delete">
        <p>Name: <strong>@Author.Name</strong></p>
        <p>Href: <strong>@Author.Href</strong></p>

        <button type="submit" class="btn btn-danger">Удалить</button>
        <a href="/author" class="btn btn-secondary">Назад</a>
    </EditForm>
}
else
{
    <p>Ага)</p>
}

@code {
    [Parameter] public int AuthorId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Author = Unit.AuthorRepository.GetById(AuthorId);
    }

    private Author? Author;

    private async Task Delete()
    {
        Unit.AuthorRepository.Remove(Author);
        await Unit.SaveChangesAsync();
        NavigationManager.NavigateTo("author");
    }
}