@page "/video/delete/{VideoId:int}"

@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<MediaContext> DbFactory
@inject NavigationManager NavigationManager

<h3>Удалить?</h3>

<EditForm Model="Video" OnValidSubmit="Delete">
    <p>Name: <strong>@Video.Title</strong></p>
    <p>Href: <strong>@Video.Href</strong></p>

    @if (Video.TimeCodes.Count > 0)
    {
        <p class="h3">Таймкоды:</p>

        @foreach (var timecode in Video.TimeCodes)
        {
            <p>@timecode.StartModified - @timecode.EndModified</p>
        }
    }

    @if (PreviewManager.HasPreview(Video))
    {
        <p>Удалить превью?</p>
    }

    <button type="submit" class="btn btn-danger">Удалить</button>
    <a href="/video" class="btn btn-secondary">Назад</a>
</EditForm>

@code {
    [Parameter] public int VideoId { get; set; }

    private MediaContext _context;

    private Video Video = new();

    protected override async Task OnInitializedAsync()
    {
        _context = await DbFactory.CreateDbContextAsync();

        Video = _context.Videos.Include(x => x.TimeCodes).ToList().FirstOrDefault(x => x.Id == VideoId);
    }

    private async Task Delete()
    {
        foreach (var timecode in Video.TimeCodes)
        {
            _context.TimeCodes.Remove(timecode);
        }
        PreviewManager.Delete(Video);
        _context.Videos.Remove(Video);
        await _context.SaveChangesAsync();
        NavigationManager.NavigateTo("video");
    }
}